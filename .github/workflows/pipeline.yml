name: Terraform AWS Lambda

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Apply Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install

      - name: List files in target directory
        run: ls -l target/

      - name: Rename JAR to LambdaAutenticacao-1.0.jar
        run: mv target/*.jar target/LambdaAutenticacao-1.0.jar

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: lambda-jar
          path: target/LambdaAutenticacao-1.0.jar

      - name: Configurar credenciais da AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Download JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: lambda-jar
          path: target/          

      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.6.0

      - name: Check if Lambda exists
        id: check_lambda
        run: |
          if aws lambda get-function --function-name lambda-autenticacao --region us-east-1 > /dev/null 2>&1; then
            echo "lambda_exists=true" >> $GITHUB_OUTPUT
          else
            echo "lambda_exists=false" >> $GITHUB_OUTPUT
          fi   

      - name: Inicializar Terraform
        run: terraform init

      - name: Validar Terraform
        run: terraform validate

      - name: Import Lambda if it exists
        if: steps.check_lambda.outputs.lambda_exists == 'true'
        run: terraform import aws_lambda_function.lambda-autenticacao lambda-autenticacao

      - name: Planejar Terraform
        run: terraform plan        

      - name: Aplicar Terraform
        run: terraform apply -auto-approve
